
# –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç–∏ –∏ —Ä–∞—Å—á–µ—Ç –Ω–∞–≥—Ä—É–∑–æ–∫ –≤ 2D-–º–∏—Ä–µ
# –ó–∞–ø—É—Å—Ç–∏—Ç—å –º–æ–∂–Ω–æ —Ç—É—Ç: https://py3.codeskulptor.org/#user310_TkAlPMbkP22JOs3_13.py

L = ( "‚¨õüü´üü´üü´üü´üü´üü´üü´üü´‚¨õ‚¨õ‚¨õ‚¨õ‚¨õ‚¨õ‚¨õ‚¨õ‚¨õ‚¨õ‚¨õ‚¨õ‚¨õ‚¨õ‚¨õ‚¨õ‚¨õ\n"
      "‚¨õüü´‚¨õ‚¨õ‚¨õ‚¨õ‚¨õ‚¨õüü´‚¨õ‚¨õ‚¨õ‚¨õ‚¨õüü´üü´üü´üü´üü´üü´üü´üü´‚¨õ‚¨õ‚¨õ‚¨õ\n"
      "‚¨õüü´üü´üü´‚¨õ‚¨õüü´üü´üü´üü´‚¨õ‚¨õ‚¨õ‚¨õ‚¨õ‚¨õ‚¨õ‚¨õüü´‚¨õ‚¨õ‚¨õ‚¨õ‚¨õ‚¨õ‚¨õ\n"
      "‚¨õüü´üü´üü´üü´üü´üü´üü´üü´üü´üü´‚¨õ‚¨õ‚¨õ‚¨õ‚¨õ‚¨õ‚¨õüü´‚¨õ‚¨õ‚¨õüü´‚¨õ‚¨õ‚¨õ\n"
      "‚¨õ‚¨õüü´üü´üü´üü´üü´üü´‚¨õüü´üü´‚¨õüü´üü´‚¨õ‚¨õ‚¨õüü´üü´üü´üü´‚¨õüü´‚¨õ‚¨õ‚¨õ\n"
      "‚¨õ‚¨õüü´üü´‚¨õ‚¨õüü´üü´üü´üü´üü´üü´üü´üü´üü´‚¨õ‚¨õüü´üü´‚¨õ‚¨õ‚¨õüü´‚¨õ‚¨õ‚¨õ\n"
      "‚¨õüü´üü´üü´‚¨õ‚¨õ‚¨õüü´üü´üü´‚¨õ‚¨õ‚¨õ‚¨õüü´üü´üü´üü´üü´‚¨õ‚¨õ‚¨õüü´‚¨õ‚¨õ‚¨õ\n"
      "‚¨õüü´üü´üü´üü´üü´üü´üü´üü´üü´üü´üü´üü´üü´üü´üü´üü´üü´üü´üü´‚¨õ‚¨õüü´‚¨õ‚¨õ‚¨õ\n"
      "‚¨õ‚¨õüü´üü´üü´üü´üü´üü´üü´üü´üü´üü´üü´üü´üü´üü´üü´üü´üü´üü´üü´üü´üü´‚¨õ‚¨õ‚¨õ\n"
      "‚¨õ‚¨õüü´üü´üü´üü´üü´üü´üü´üü´üü´üü´üü´üü´üü´üü´üü´üü´üü´üü´üü´üü´üü´‚¨õ‚¨õ‚¨õ\n"
      "‚¨õ‚¨õ‚¨õüü´üü´üü´üü´üü´‚¨õüü´üü´üü´üü´üü´üü´‚¨õüü´üü´üü´‚¨õ‚¨õüü´üü´‚¨õ‚¨õ‚¨õ\n"
      "‚¨õ‚¨õ‚¨õ‚¨õ‚¨õüü´üü´üü´üü´üü´üü´üü´üü´‚¨õ‚¨õ‚¨õüü´üü´üü´‚¨õ‚¨õüü´üü´üü´‚¨õ‚¨õ\n"
      "‚¨õ‚¨õ‚¨õüü´üü´üü´üü´üü´üü´üü´üü´üü´‚¨õ‚¨õ‚¨õ‚¨õüü´üü´üü´üü´üü´üü´üü´üü´‚¨õ‚¨õ\n"
      "‚¨õ‚¨õüü´üü´üü´üü´‚¨õ‚¨õüü´üü´‚¨õ‚¨õ‚¨õüü´üü´‚¨õüü´üü´üü´üü´üü´üü´üü´üü´üü´‚¨õ\n"
      "‚¨õüü´üü´üü´üü´üü´‚¨õ‚¨õüü´üü´üü´‚¨õ‚¨õüü´üü´‚¨õüü´üü´üü´üü´üü´‚¨õ‚¨õüü´üü´‚¨õ\n"
      "‚¨õüü´üü´üü´üü´üü´üü´üü´üü´üü´üü´üü´‚¨õ‚¨õ‚¨õüü´üü´üü´‚¨õ‚¨õ‚¨õ‚¨õ‚¨õ‚¨õüü´üü´\n"
      "‚¨õüü´üü´üü´üü´üü´üü´üü´üü´üü´üü´üü´üü´üü´üü´üü´üü´üü´üü´üü´üü´üü´üü´üü´üü´üü´" )

UP = 0.68    # –ü—Ä–æ—Ü–µ–Ω—Ç —É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç–∏, –ø–µ—Ä–µ–¥–∞–≤–∞–µ–º—ã–π –≤–µ—Ä—Ö–Ω–µ–º—É –∫–≤–∞–¥—Ä–∞—Ç—É
SIDE = 0.3   # –ü—Ä–æ—Ü–µ–Ω—Ç —É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç–∏, –ø–µ—Ä–µ–¥–∞–≤–∞–µ–º—ã–π –±–æ–∫–æ–≤—ã–º –∫–≤–∞–¥—Ä–∞—Ç–∞–º

# –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –∫–∞—Ä—Ç—É –≤ —á–∏—Å–ª–æ–≤—É—é –º–∞—Ç—Ä–∏—Ü—É
layers = L.split("\n")
height = len(layers)
width  = len(layers[0])

print(f"–®–∏—Ä–∏–Ω–∞ –º–∏—Ä–∞: {width}  –≤—ã—Å–æ—Ç–∞ –º–∏—Ä–∞: {height}\n")

LAND = []  # –ö–∞—Ä—Ç–∞ —É—Å—Ç—Ä–æ–π—á—á–∏–≤–æ—Å—Ç–µ–π
COLO = []  # –¶–≤–µ—Ç–æ–≤–∞—è –∫–∞—Ä—Ç–∞ (–¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–π –∫–∞—Ä—Ç–∏–Ω–∫–∏)
LMAS = []  # –ö–∞—Ä—Ç–∞ –º–∞—Å—Å

# –°–æ–∑–¥–∞–µ–º –∏ –∑–∞–ø–æ–ª–Ω—è–µ–º –º–∞—Ç—Ä–∏—Ü—É LAND (–ø–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç—É—é)
for row in reversed(layers):
    numeric_row, co, lma = [], [], []
    for cell in row:
        numeric_row.append(-1 if cell == "‚¨õ" else 0)
        co.append(""); lma.append(0);
    LAND.append(numeric_row)
    COLO.append(co); LMAS.append(lma)

# ---------------------------------------------------------------------------------------------------------------    
# –†–∞—Å–ø—Ä–µ–¥–µ–ª—è–µ–º —É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å
for Y in range(height):
    # 1-–π –ø—Ä–æ—Ö–æ–¥: –±–µ—Ä–µ–º —É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å —Å–Ω–∏–∑—É
    for X in range(width):
        if LAND[Y][X] == -1:   continue
        if Y == 0:             LAND[Y][X] = 99.999
        elif LAND[Y-1][X] > 0: LAND[Y][X] = LAND[Y-1][X] * UP
    
    # 2-–π –ø—Ä–æ—Ö–æ–¥: —Ä–∞—Å–ø—Ä–µ–¥–µ–ª—è–µ–º —É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å —Å–æ—Å–µ–¥—è–º —Å–ª–µ–≤–∞-–Ω–∞–ø—Ä–∞–≤–æ
    for X in range(width):
        if LAND[Y][X] > 0 and Y > 0 and X < width - 1 and LAND[Y][X+1] >= 0:
           LAND[Y][X+1] = min(LAND[Y][X+1] + LAND[Y][X] * SIDE, 99.999)
    
    # 3-–π –ø—Ä–æ—Ö–æ–¥: —Ä–∞—Å–ø—Ä–µ–¥–µ–ª—è–µ–º —É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å —Å–æ—Å–µ–¥—è–º —Å–ø—Ä–∞–≤–∞-–Ω–∞–ª–µ–≤–æ
    for X in reversed(range(width)):
        if LAND[Y][X] > 0 and Y > 0 and X > 0 and LAND[Y][X-1] >= 0:
           LAND[Y][X-1] = min(LAND[Y][X-1] + LAND[Y][X] * SIDE, 99.999)

# –í—ã–≤–æ–¥–∏–º —É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å –∫–≤–∞–¥—Ä–∞—Ç–æ–≤
for Y in reversed(range(height)):
    print(f"{Y}{'' if Y > 9 else ' '}" +
          ' '.join(f"{int(cell):2d}" if cell >= 0 else "  " for cell in LAND[Y]))

# --------------------------------------------------------------------------------------------
# –¢–µ–ø–µ—Ä—å –º—É—Ç–∏–º –º–∞—Å—Å—É

mas1 = 1    # –ú–∞—Å—Å–∞ –æ–¥–Ω–æ–≥–æ –∫–≤–∞–¥—Ä–∞—Ç–∞
Krit = 3    # –ú–∞—Å—Å–∞ –¥–ª—è –æ–±—Ä—É—à–µ–Ω–∏—è
ustA = 100  # –ú–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä —É—Å—Ç—Ä–æ–π—á–∏–≤–æ—Å—Ç–∏ "–∑–∞–º—É—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ" –∫–≤–∞–¥—Ä–∞—Ç–∞ (—Å–æ—Å–µ–¥–∏ —Å –±–æ–∫–æ–≤ –∏ —Å–Ω–∏–∑—É)
ustB = 30   # –ú–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä —É—Å—Ç—Ä–æ–π—á–∏–≤–æ—Å—Ç–∏ "–ø–æ–¥–ø–µ—Ä—Ç–æ–≥–æ" –∫–≤–∞–¥—Ä–∞—Ç–∞ (–µ—Å—Ç—å —Å–æ—Å–µ–¥ —Å–Ω–∏–∑—É)
ustC = 2    # –ú–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä —É—Å—Ç—Ä–æ–π—á–∏–≤–æ—Å—Ç–∏ "–Ω–∞–≤–∏—Å–∞—é—â–µ–≥–æ" (–±–µ–∑ —Å–æ—Å–µ–¥–∞ —Å–Ω–∏–∑—É) –∫–≤–∞–¥—Ä–∞—Ç–∞ —Ä—è–¥–æ–º —Å "–ø–æ–¥–ø–µ—Ä—Ç—ã–º"

for Y in reversed(range(height)):  # –ò–¥–µ–º –ø–æ —Å—Ç—Ä–æ–∫–∞–º —Å–≤–µ—Ä—Ö—É-–≤–Ω–∏–∑
    SortMas = []       # –°–ø–∏—Å–æ–∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–≤–∞–¥—Ä–∞—Ç–æ–≤ –≤ –¥–∞–Ω–Ω–æ–π —Å—Ç—Ä–æ–∫–µ (Y)
    for X in range(width):                      # –ü—Ä–æ–±–µ–≥–∞–µ–º –ø–æ –≤—Å–µ–º (X)
        if LAND[Y][X] > 0:                      # –ò—â–∏–º –≤—Å–µ —Ö–æ—Ç—å –Ω–µ–º–Ω–æ–≥–æ —É—Å—Ç—Ä–æ–π—á–∏–≤—ã–µ –∫–≤–∞–¥—Ä–∞—Ç—ã
            SortMas.append([LAND[Y][X], Y, X])  # –ö–æ–ø–∏—Ä—É–µ–º –∏—Ö –¥–∞–Ω–Ω—ã–µ (—É—Å—Ç—Ä–æ–π—á–∏–≤–æ—Å—Ç—å, Y, X) –≤ —Å–ø–∏—Å–æ–∫ SortMas
            LMAS[Y][X] += mas1                   # –ó–∞ –æ–¥–Ω–æ –Ω–∞–∫–∏–¥—ã–≤–∞–µ–º –≤—Å–µ–º –∫–≤–∞–¥—Ä–∞—Ç–∞–º –±–∞–∑–æ–≤—É—é –º–∞—Å—Å—É
            
                       # –ü—Ä–æ—Å—Ç–∞—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ —Å–æ—Ä—Ç–∏—Ä—É–µ—Ç –ø–æ –ø–µ—Ä–≤–æ–º—É –∑–Ω–∞—á–µ–Ω–∏—é –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö —Å–ø–∏—Å–æ—á–∫–æ–≤ (>—É—Å—Ç—Ä–æ–π—á–∏–≤–æ—Å—Ç—å<, Y, X)           
    SortMas.sort()     # –ø–µ—Ä–≤—ã–º–∏ –ø–æ–π–¥—É—Ç —Å –º–µ–Ω—å—à–µ–π —É—Å—Ç—Ä–æ–π—á–∏–≤–æ—Å—Ç—å—é
     
    # –ú–∞—Å—Å–∞ –±—É–¥–µ—Ç –ø–µ—Ä–µ–¥–∞—Ç—å–≤–∞—Ç—å—Å—è –≤–Ω–∏–∑ –∏ —Å–æ—Å–µ–¥—è–º, —É –∫–æ—Ç–æ—Ä—ã—Ö —É—Å—Ç—Ä–æ–π—á–∏–≤–æ—Å—Ç—å –≤—ã—à–µ
    # –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–∞—Å—Å—ã –±—É–¥–µ—Ç –∏—Å—Ö–æ–¥–∏—Ç—å –∏–∑ —É—Å—Ç—Ä–æ–π—á–∏–≤–æ—Å—Ç–µ–π –∫–≤–∞–¥—Ä–∞—Ç–æ–≤ - –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π
    
    for m in SortMas:  # –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –≤—Å–µ –∫–≤–∞–¥—Ä–∞—Ç–∏–∫–∏ –Ω–∞—á–∏–Ω–∞—è —Å –º–µ–Ω–µ–µ —É—Å—Ç—Ä–æ–π—á–∏–≤—ã—Ö
       #if Y != 14: continue
        KudaMas = []   # –°–ø–∏—Å–æ–∫ —Å –¥–∞–Ω–Ω—ã–º–∏ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π –º–∞—Å—Å—ã
        SosedKoe = 0   # –û–±—â–∏–π –∫–æ—ç—Ñ–∏—Ü–∏–µ–Ω—Ç, –ø—Ä–∏–≤–æ–¥—è—â–∏–π —Å—É–º–º—É —É—Å—Ç—Ä–æ–π—á–∏–≤–æ—Å—Ç–µ–π –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π –∫ 100 (–¥–ª—è –ø—Ä–æ—Ü–µ–Ω—Ç–Ω–æ–≥–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è)
    
        yy, xx, ust = m[1], m[2], m[0]  # –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∏ —É—Å—Ç—Ä–æ–π—á–∏–≤–æ—Å—Ç—å –ø–µ—Ä–µ–¥–∞—é—â–µ–≥–æ –º–∞—Å—Å—É –∫–≤–∞–¥—Ä–∞—Ç–∞
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤–∞–ª–∏–¥–Ω—ã—Ö –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π –º–∞—Å—Å—ã –∏ –∑–∞–Ω–µ—Å–∏–º –∏—Ö –¥–∞–Ω–Ω—ã—Ö (x, y, —É—Å—Ç–æ–π-—Ç—å) –≤ —Å–ø–∏—Å–æ–∫ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π (KudaMas)
        # –ø–æ–ø—É—Ç–Ω–æ —Å—É–º–º–∏—Ä—É–µ–º –≤—Å–µ –∏—Ö —É—Å—Ç—Ä–æ–π—á–∏–≤–æ—Å—Ç–∏ –≤ SosedKoe 
        if xx > 0 and LAND[yy][xx-1] > ust:       SosedKoe += LAND[yy][xx-1]; KudaMas.append([yy, xx-1, LAND[yy][xx-1]])
        if xx < width-1 and LAND[yy][xx+1] > ust: SosedKoe += LAND[yy][xx+1]; KudaMas.append([yy, xx+1, LAND[yy][xx+1]])
        if yy > 0 and LAND[yy-1][xx] > 0:         SosedKoe += LAND[yy-1][xx]; KudaMas.append([yy-1, xx, LAND[yy-1][xx]])
        # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å—É–º–º—É —É—Å—Ç—Ä–æ–π—á–∏–≤–æ—Å—Ç–µ–π –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π –≤ –∫–æ—ç—Ñ–∏—Ü–∏–µ–Ω—Ç, –ø—Ä–∏–≤–æ–¥—è—â–∏–π —ç—Ç—É —Å—É–º–º—É –∫ 100
        if SosedKoe > 0: SosedKoe = 100 / SosedKoe  
    
        for s in KudaMas:                        # –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –≤—Å–µ–º –ø–æ–ª—É—á–∞—Ç–µ–ª—è–º –º–∞—Å—Å—ã
            yyy, xxx = s[0], s[1]                # –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π
            ProcentMas = s[2] / 100 * SosedKoe   # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —á–∞—Å—Ç—å –º–∞—Å—Å—ã –ø–µ—Ä–µ–¥–∞—é—â–µ–≥–æ –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—É—á–∞—Ç–µ–ª—è (–Ω–∞–ø—Ä–∏–º–µ—Ä 0.33)
            LMAS[yyy][xxx] += LMAS[yy][xx] * ProcentMas
            

    # –ü—Ä–æ–±–µ–≥–∞–µ–º –ø–æ (X), –æ–ø—Ä–µ–¥–µ–ª–∞–µ–º —É–ø–∞–¥–µ—Ç / –Ω–µ —É–ø–∞–¥–µ—Ç (–∏ –∫—Ä–∞—Å–∏–º), —Å —É—á–µ—Ç–æ–º –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤ ustA, ustB, ustC  
    for X in range(width):                      
        StabKoe = 1    # –ö–æ—ç—Ñ–∏—Ü–∏–µ–Ω—Ç, –ø–æ–≤—ã—à–∞—é—â–∏–π –ø–æ—Ä–æ–≥ –æ–±–≤–∞–ª–∞

        if Y == 0 or LAND[Y-1][X] > 0:   # –ü–æ–¥–ø–µ—Ä—Ç—ã–µ –∫–≤–∞–¥—Ä–∞—Ç—ã
            StabKoe = ustB
            if (X > 0 and LAND[Y][X-1] > 0) and (X < width-1 and LAND[Y][X+1] > 0):  # –ó–∞–º—É—Ä–æ–≤–∞–Ω–Ω—ã–π (—Å —Å–±–æ–∫–æ–≤ –∏ —Å–Ω–∏–∑—É)
                StabKoe = ustA              
        if Y > 0 and LAND[Y-1][X] <= 0:  # –í–∏—Å—è—á–∏–µ –∫–≤–∞–¥—Ä–∞—Ç—ã
            if (X > 0 and LAND[Y-1][X-1] > 0) or (X < width-1 and LAND[Y-1][X+1] > 0):
                StabKoe = ustC 
        
        Obval = LMAS[Y][X] / (Krit * StabKoe) * 100  # "–ü—Ä–æ—Ü–µ–Ω—Ç –æ–±—Ä—É—à–µ–Ω–∏—è", –µ—Å–ª–∏ >= 100 —Ç–æ –æ–±—Ä—É—à–µ—Ç—Å—è
        
        if Obval == 0:    COLO[Y][X] = "‚¨õ"
        elif Obval <= 34: COLO[Y][X] = "üü©"
        elif Obval <= 67: COLO[Y][X] = "üü®"
        elif Obval < 100: COLO[Y][X] = "üüß"
        else:             COLO[Y][X] = "üü•"
        
     
print()
# –í—ã–≤–æ–¥–∏–º v–∞—Å—Å—ã –∫–≤–∞–¥—Ä–∞—Ç–æ–≤
for Y in reversed(range(height)):
    print(f"{Y}{'' if Y > 9 else ' '}" + 
          ' '.join(f"{int(cell):2d}" if cell > 0 else "  " for cell in LMAS[Y]))


# –í—ã–≤–æ–¥–∏–º –º–∏—Ä –∏–∑ —Ü—ã–µ—Ç–Ω—ã—Ö –∫–≤–∞–¥—Ä–∞—Ç–æ–≤
print()
for Y in reversed(range(height)): print(f"{Y}{[' ',''][Y > 9]}  " + ''.join(COLO[Y]))
    
print("\n")
